Events Tutorial
--------------------------

This tutorial will show an application developer how to register for
Network Element Events such as Syslog events, CDP events, CLI events and OIR events.
Event handlers for the above events will be run in their own thread.

************************
* SyslogEventTutorial
************************

This example application connects to the network element and listens for 'LINK'
syslog message entered on the Network element's logger.

After the application connects and registers for the syslog event, it itself
triggers a Syslog event by simulating interface shutdown. When the Syslog message
with "LINK" substring enters the Network element's logger the syslog event handler
will be called. The event handler then prints out the Syslog message details.

To build this tutorial:

    export CLASSPATH='onePK-sdk-<version>/java/lib/*:.'
    cd onePK-sdk-<version>/java/tutorials/src/main/java
    javac com/cisco/onep/tutorials/events/SyslogEventTutorial.java

To run this tutorial:

    java \
        [-Djavax.net.ssl.keyStore=<path to keyStore>] \
        [-Djavax.net.ssl.keyStorePassword=<keyStore password>] \
        [-Djavax.net.ssl.trustStore=<path to trustStore>] \
        [-Djavax.net.ssl.trustStorePassword=<trustStore password>] \
        com.cisco.onep.tutorials.events.SyslogEventTutorial \
         -a <element address> -u <username> -p <password> \
        [-t <0=tls | 1=tcp>]

    Where username and password are configured on the network element
    you are connecting to.

************************
* CDPEventTutorial
************************

This example application connects to the network element and listens to
CDP (Cisco Discovery Protocol) changes occurring on the Network element.

Note: Test this application on a Network element that is connected to one or
more Network elements.

After the application connects and registers for the CDP events it listens to the
periodic messages sent to a multicast address by the neighboring CDP-configured
network elements. Whent those CDP messages are received the CDP event handler
will be called.The event handler then prints out the CDP event details.

To build this tutorial:

    export CLASSPATH='onePK-sdk-<version>/java/lib/*:.'
    cd onePK-sdk-<version>/java/tutorials/src/main/java
    javac com/cisco/onep/tutorials/events/CDPEventTutorial.java

To run this tutorial:

    java \
        [-Djavax.net.ssl.keyStore=<path to keyStore>] \
        [-Djavax.net.ssl.keyStorePassword=<keyStore password>] \
        [-Djavax.net.ssl.trustStore=<path to trustStore>] \
        [-Djavax.net.ssl.trustStorePassword=<trustStore password>] \
        com.cisco.onep.tutorials.events.CDPEventTutorial \
         -a <element address> -u <username> -p <password> \
        [-t <0=tls | 1=tcp>]

    Where username and password are configured on the network element
    you are connecting to.


************************
* CliEventTutorial
************************

This example application connects to the network element and listens to
CLI commands entered on the Network element.

The example CLI command use in this application is "show clock".
After the application connects and registers for the CLI event, the user should enter
"show clock" command on the network element. This will trigger the CLI event and the
event handler will be called. Since the sync flag is set to true in this application,
the default command will not be executed on the network element.
Instead the sync_reply set by the event handler function will be returned.

To build this tutorial:

    export CLASSPATH='onePK-sdk-<version>/java/lib/*:.'
    cd onePK-sdk-<version>/java/tutorials/src/main/java
    javac com/cisco/onep/tutorials/events/CliEventTutorial.java

To run this tutorial:

    java \
        [-Djavax.net.ssl.keyStore=<path to keyStore>] \
        [-Djavax.net.ssl.keyStorePassword=<keyStore password>] \
        [-Djavax.net.ssl.trustStore=<path to trustStore>] \
        [-Djavax.net.ssl.trustStorePassword=<trustStore password>] \
        com.cisco.onep.tutorials.events.CliEventTutorial \
         -a <element address> -u <username> -p <password> \
        [-t <0=tls | 1=tcp>]

    Where username and password are configured on the network element
    you are connecting to.

************************
* OirEventTutorial
************************

This example application connects to the network element and listens to
OIR (Online Insertion and Removal) such as insertion or removal of a
network module (NM) or fabric card or line card from a Network element.

Note: OIR event couldn't be triggered on a simulated network element.
OIR is supported on Cisco 7600, ESR 10000, and 12000 series router.

After the application connects and registers for the syslog the user should execute
the OIR commands to insert a new line card. This action will trigger the OIR event
and the event handler will be called.

To build this tutorial:

    export CLASSPATH='onePK-sdk-<version>/java/lib/*:.'
    cd onePK-sdk-<version>/java/tutorials/src/main/java
    javac com/cisco/onep/tutorials/events/OirEventTutorial.java

To run this tutorial:

    java \
        [-Djavax.net.ssl.keyStore=<path to keyStore>] \
        [-Djavax.net.ssl.keyStorePassword=<keyStore password>] \
        [-Djavax.net.ssl.trustStore=<path to trustStore>] \
        [-Djavax.net.ssl.trustStorePassword=<trustStore password>] \
        com.cisco.onep.tutorials.events.OirEventTutorial \
         -a <element address> -u <username> -p <password> \
        [-t <0=tls | 1=tcp>]

    Where username and password are configured on the network element
    you are connecting to.
